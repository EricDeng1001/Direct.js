/*
**   Antinux Innovation
**   Author: Eric Deng
*/
import React from 'react';
import { FormGroup , ControlLabel , FormControl , Checkbox } from 'react-bootstrap';
import ButtonControlPane from 'UI/ButtonControlPane';

import { useridRegExp , passwordRegExp } from 'Connected/UserManager';

class LoginForm extends React.PureComponent {
  static defaultProps = {
    initName: "",
    initPassword: ""
  }

  constructor( props ){
    super( props );
    this.state = {
      userid: props.initName,
      useridValid: null,
      password: props.initPassword,
      passwordValid: null,
    };
  }

  render(){
    const {
      userNotExist,
      passwordWrong,
      onToggleRememberPassword,
      rememberPassword,
      onToggleKeepLogin,
      keepLogin,
      onCancel,
      goSignUp
    } = this.props;
    const {
      useridValid,
      passwordValid,
      password,
      userid
    } = this.state;

    var useridValidationState = null;
    var passwordValidationState = null;
    var useridPrompt = null;
    var passwordPrompt = null;
    if( useridValid && passwordValid ){
      if( userNotExist ){
        useridValidationState = "warning";
        useridPrompt = "userid not exist";
      }
      else {
        useridValidationState = "success";
      }
      if( passwordWrong ){
        passwordValidationState = "error";
        passwordPrompt = "password wrong";
      }
    }
    else {
      if( useridValid !== null && !useridValid ){
        useridValidationState = "error";
        useridPrompt = "userid format is not correct";
      }
      if( passwordValid !== null && !passwordValid ){
        passwordValidationState = "error";
        passwordPrompt = "password format is not correct";
      }
    }

    return (
      <div className="fullSpaceBFC">
        <form>
          <FormGroup
            controlId="userLoginUsername"
            validationState={useridValidationState}
            onSubmit={this.onLogin}
          >
            <ControlLabel>userid</ControlLabel>
            <FormControl
              type="text"
              value={userid}
              placeholder="your userid"
              onChange={this.inputUsername}
              onKeyDown={this.onKeyDown}
            />
            <FormControl.Feedback />
            {
              useridPrompt
            }
          </FormGroup>
          <FormGroup
            controlId="userLoginUsername"
            validationState={passwordValidationState}
          >
            <ControlLabel>password</ControlLabel>
            <FormControl
              type="password"
              value={password}
              placeholder="your password"
              onChange={this.inputPassword}
              onKeyDown={this.onKeyDown}
            />
            <FormControl.Feedback />
            {
              passwordPrompt
            }
          </FormGroup>
          <Checkbox
            onChange={onToggleRememberPassword}
            validationState={rememberPassword ? "success" : "error"}
            checked={rememberPassword}
          >
            remember password
          </Checkbox>
          <Checkbox
            onChange={onToggleKeepLogin}
            validationState={keepLogin ? "success" : "error"}
            checked={keepLogin}
          >
            keep login
          </Checkbox>
          <ButtonControlPane
            mainAction={{
              action: this.onLogin,
              text: "login"
            }}
            additionalActions={[{
              action: onCancel,
              text: "cancel"
            },{
              action: goSignUp,
              text: "sign up"
            }]}
          />
        </form>
      </div>
    );
  }

  onLogin = () => {
    const { userid , password } = this.state;
    const useridValid = useridRegExp.test( userid );
    const passwordValid = passwordRegExp.test( password ) && password.length >= 8;
    if( useridValid && passwordValid ){
      this.props.onLogin({
        userid,
        password
      });
    }
    this.setState({
      useridValid,
      passwordValid
    });
  }

  onKeyDown = ev => {
    this.setState({
      useridValid: null,
      passwordValid: null
    });
    if( ev.key === 'Enter' ){
      this.onLogin();
    }
  }

  inputUsername = ev => {
    this.setState({
      userid: ev.target.value
    });
  }

  inputPassword = ev => {
    this.setState({
      password: ev.target.value
    });
  }
};

export default LoginForm;
