import React from 'react';

import Routes from 'routes';

import { withRouter } from 'react-router-dom';

import { TransitionGroup , Transition } from 'react-transition-group';

import timeout from "direct-core/animationTime";

const defaultStyle = {
  transition: `all ${timeout}ms ease`
};

const animation = ( action , state ) =>  {
  let pop = action === "POP";
  switch( state ){
    case "entering":
      return {
        left: pop ?  "-100%" : "100%"
      };
    case "entered":
      return {
        left: "0"
      };
    case "exiting":
      return {
        left: pop ? "100%" : "-100%"
      };
    case "exited":
      return {
        left: "0"
      };
  }
}
class AnimatedPages extends React.PureComponent {
  render(){
    const { location , history } = this.props;
    // in page will use appear
    // out page will use leave
    return (
      <TransitionGroup className="fullSpaceBFC">
        <Transition
          key={location.pathname}
          timeout={{
            enter: 0,
            exit: timeout
          }}
          appear
        >
          {
            state =>
              <section
                className="page"
                style={{
                  ...defaultStyle,
                  ...animation( history.action , state )
                }}
              >
                <Routes location={location} />
              </section>
          }
        </Transition>
      </TransitionGroup>
    );
  }

};

export default withRouter( AnimatedPages );
