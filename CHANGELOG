2.0.0:
现在框架自动拆分代码的能力更强了：
react等拆分为一个vendor包,
框架运行时拆分为appWithDirect
配置文件拆分为directCoreConfig,
以上三个文件会在首次加载,

其他代码：
异步加载代码被单独拆分为一个包
任何两个包的公共依赖（大于３０Ｋ）会被拆为单独的包
注意，首页包（可以理解为任何需要在首页加载的，并且不属于vendor,appWithDirect,directCoreConfig的包）并不符合以上规则
如果Ａ包是首页包的依赖：
那么他将被打包进入首页包
如果Ａ包是首页的无关异步包：
并且和首页包有超过３０Ｋ的公共包Ｂ，那么这个公共包Ｂ只会被包含在首页包中．
如果Ａ包是首页的同步无关包（也就是另一个异步无关包Ｃ的同步依赖包）：
并且和首页包有超过３０Ｋ的公共包Ｂ，那么这个公共包Ｂ只会被包含在首页包中．

一般来说，
vendor,appWithDirect不会发生变化，因此会为后续加载提供大量速度,
directCoreConfig和其他包也解耦开来，在页面代码不变化的情况下，
仅改变配置只会触发directCoreConfig的哈希变化，用户不必下载被同步引入的（但是没有更改的）其他代码,因此升级核心更为灵活（比如增加redux中间件）．

配置包改名为Core

27-04-2018/2.4.0

增加ErrorHandler配置
增加压缩配置
