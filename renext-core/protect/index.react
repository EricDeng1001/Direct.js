import React from 'react';

export default ( depObj , always = false ) => Comp => {
  const keys = Object.keys( depObj );
  return class extends React.Component {
    constructor( props ){
      super( props );
      var allResolved = true;
      for( let key of keys ){
        if( !depObj[key].satisfy( this.props[key] ) ){
          allResolved = false;
          depObj[key].block.call( this );
        }
      }
      this.state = {
        allResolved
      };
    }

    componentWillReceiveProps( nextProps ){
      var allResolved = true;
      for( let key of keys ){
        if( !nextProps[key] ){
          allResolved = false;
        }
      }
      if( allResolved ){
        this.setState({
          allResolved: true
        });
      }
      else {
        if( always ){
          this.setState({
            allResolved: false
          });
        }
      }
    }

    render(){
      return (
        this.state.allResolved ?
        <Comp {...this.props} />
        :null
      );
    }
  };
}
